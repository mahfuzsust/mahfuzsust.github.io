<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Read / Write</title>
  <icon>https://www.mahfuz.info/icon.png</icon>
  
  <link href="https://www.mahfuz.info/atom.xml" rel="self"/>
  
  <link href="https://www.mahfuz.info/"/>
  <updated>2023-10-15T16:20:59.359Z</updated>
  <id>https://www.mahfuz.info/</id>
  
  <author>
    <name>Mahfuzur Rahman</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Longest Palindromic Substring</title>
    <link href="https://www.mahfuz.info/2023/10/15/longest-palindromic-substring/"/>
    <id>https://www.mahfuz.info/2023/10/15/longest-palindromic-substring/</id>
    <published>2023-10-15T16:20:59.359Z</published>
    <updated>2023-10-15T16:20:59.359Z</updated>
    
    
    <summary type="html">Given a string s, return the longest palindromic substring in s.

A string is called a palindrome string if the reverse of that string is the same as the original string.

Example 1:

1
2
3


Input: s = &quot;babad&quot;
Output: &quot;bab&quot;
Explanation: &quot;aba&quot; is also a valid answer.


Solution
There are multiple wa</summary>
    
    
    
    <category term="leetcode" scheme="https://www.mahfuz.info/categories/leetcode/"/>
    
    
    <category term="algorithm" scheme="https://www.mahfuz.info/tags/algorithm/"/>
    
    <category term="java" scheme="https://www.mahfuz.info/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>AVL (Balanced Binary Search Tree)</title>
    <link href="https://www.mahfuz.info/2021/08/05/balanced-binary-tree/"/>
    <id>https://www.mahfuz.info/2021/08/05/balanced-binary-tree/</id>
    <published>2021-08-05T08:38:00.000Z</published>
    <updated>2023-10-15T17:56:08.776Z</updated>
    
    
    <summary type="html">In our previous post(Binary Search Tree), we have discussed binary search trees. We have checked out the insertion, deletion, and find operation for a BST.

In the best-case scenario, BST can provide O(log n) complexity but in the worst-case scenario, this gives us O(n) complexity. The worst-case ca</summary>
    
    
    
    <category term="Algorithm" scheme="https://www.mahfuz.info/categories/Algorithm/"/>
    
    
    <category term="binary search tree" scheme="https://www.mahfuz.info/tags/binary-search-tree/"/>
    
    <category term="algorithm" scheme="https://www.mahfuz.info/tags/algorithm/"/>
    
    <category term="java" scheme="https://www.mahfuz.info/tags/java/"/>
    
    <category term="avl" scheme="https://www.mahfuz.info/tags/avl/"/>
    
  </entry>
  
  <entry>
    <title>Fish FZF Configuration</title>
    <link href="https://www.mahfuz.info/2021/07/31/fish-fzf-configuration/"/>
    <id>https://www.mahfuz.info/2021/07/31/fish-fzf-configuration/</id>
    <published>2021-07-31T18:48:13.000Z</published>
    <updated>2023-10-15T16:20:59.359Z</updated>
    
    
    <summary type="html">FZF is an interactive Unix filter for command-line that can be used with any list; files, command history, processes, hostnames, bookmarks, git commits, etc.

Tree
Display directories as trees (with optional color/HTML output)

1


brew install tree


fd
Simple, fast and user-friendly alternative to</summary>
    
    
    
    <category term="Tools" scheme="https://www.mahfuz.info/categories/Tools/"/>
    
    
    <category term="fish" scheme="https://www.mahfuz.info/tags/fish/"/>
    
    <category term="fzf" scheme="https://www.mahfuz.info/tags/fzf/"/>
    
  </entry>
  
  <entry>
    <title>Binary Search Tree</title>
    <link href="https://www.mahfuz.info/2021/07/27/binary-search-tree/"/>
    <id>https://www.mahfuz.info/2021/07/27/binary-search-tree/</id>
    <published>2021-07-27T17:02:51.000Z</published>
    <updated>2023-10-15T18:20:29.842Z</updated>
    
    
    <summary type="html">A binary search tree is a tree data structure that stores values in two sub-tree of left and right.

Properties
 * If the node is the left child of its parent, then it must be smaller than (or equal to) the parent
 * If the node is the right child of its parent, then it must be larger than the paren</summary>
    
    
    
    <category term="Algorithm" scheme="https://www.mahfuz.info/categories/Algorithm/"/>
    
    
    <category term="binary search tree" scheme="https://www.mahfuz.info/tags/binary-search-tree/"/>
    
    <category term="algorithm" scheme="https://www.mahfuz.info/tags/algorithm/"/>
    
    <category term="java" scheme="https://www.mahfuz.info/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Design a job scheduler</title>
    <link href="https://www.mahfuz.info/2021/07/12/design-job-scheduler/"/>
    <id>https://www.mahfuz.info/2021/07/12/design-job-scheduler/</id>
    <published>2021-07-12T08:41:52.000Z</published>
    <updated>2023-10-15T17:55:26.429Z</updated>
    
    
    <summary type="html">Design of a job scheduler


From Wikipedia,

A job scheduler is a computer application for controlling unattended background program execution of jobs.

In the real world, we find lots of use cases of a job scheduler. For example,

 * Run a script daily to generate reports
 * Charge subscription of </summary>
    
    
    
    <category term="System design" scheme="https://www.mahfuz.info/categories/System-design/"/>
    
    
    <category term="scheduler" scheme="https://www.mahfuz.info/tags/scheduler/"/>
    
    <category term="redis" scheme="https://www.mahfuz.info/tags/redis/"/>
    
    <category term="programming" scheme="https://www.mahfuz.info/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>Scale a real-time collaborative editor</title>
    <link href="https://www.mahfuz.info/2021/07/06/scaling-collaborative-editor/"/>
    <id>https://www.mahfuz.info/2021/07/06/scaling-collaborative-editor/</id>
    <published>2021-07-06T09:43:10.000Z</published>
    <updated>2023-10-15T17:58:03.333Z</updated>
    
    
    <summary type="html">In our previous post, we have developed a basic real-time collaborative application.

In this post, we are going to scale the system.

Our previous application is perfectly fine for small project. Let’s say we have added more features into it and we want to deliver this application to end user.

To </summary>
    
    
    
    <category term="System design" scheme="https://www.mahfuz.info/categories/System-design/"/>
    
    
    <category term="socket" scheme="https://www.mahfuz.info/tags/socket/"/>
    
    <category term="node.js" scheme="https://www.mahfuz.info/tags/node-js/"/>
    
    <category term="ckeditor" scheme="https://www.mahfuz.info/tags/ckeditor/"/>
    
  </entry>
  
  <entry>
    <title>Building a real-time collaborative editor</title>
    <link href="https://www.mahfuz.info/2021/07/04/collaborative-editor/"/>
    <id>https://www.mahfuz.info/2021/07/04/collaborative-editor/</id>
    <published>2021-07-04T11:57:02.000Z</published>
    <updated>2023-10-15T18:20:14.493Z</updated>
    
    
    <summary type="html">A text editor can be a real game changer when it’s equipped with the functionality of collaborative editing. There are so many tools out there providing such features with great excellence such as Google Doc, Microsoft word etc.

I planned to design and develop such a system which can handle basic t</summary>
    
    
    
    <category term="System design" scheme="https://www.mahfuz.info/categories/System-design/"/>
    
    
    <category term="socket" scheme="https://www.mahfuz.info/tags/socket/"/>
    
    <category term="node.js" scheme="https://www.mahfuz.info/tags/node-js/"/>
    
    <category term="ckeditor" scheme="https://www.mahfuz.info/tags/ckeditor/"/>
    
  </entry>
  
  <entry>
    <title>Min Stack</title>
    <link href="https://www.mahfuz.info/2021/05/24/min-stack/"/>
    <id>https://www.mahfuz.info/2021/05/24/min-stack/</id>
    <published>2021-05-24T07:03:23.000Z</published>
    <updated>2023-10-15T16:20:59.360Z</updated>
    
    
    <summary type="html">Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.

Implement the MinStack class:

 * MinStack() initializes the stack object.
 * void push(val) pushes the element val onto the stack.
 * void pop() removes the element on the top of the stack.
 * int top</summary>
    
    
    
    <category term="Leetcode" scheme="https://www.mahfuz.info/categories/Leetcode/"/>
    
    
    <category term="algorithm" scheme="https://www.mahfuz.info/tags/algorithm/"/>
    
    <category term="java" scheme="https://www.mahfuz.info/tags/java/"/>
    
    <category term="stack" scheme="https://www.mahfuz.info/tags/stack/"/>
    
  </entry>
  
  <entry>
    <title>Convert Sorted Array to Binary Search Tree</title>
    <link href="https://www.mahfuz.info/2021/05/23/convert-sorted-array-to-binary-search-tree/"/>
    <id>https://www.mahfuz.info/2021/05/23/convert-sorted-array-to-binary-search-tree/</id>
    <published>2021-05-23T10:17:42.000Z</published>
    <updated>2023-10-15T18:21:13.131Z</updated>
    
    
    <summary type="html">Given an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree.

A height-balanced binary tree is a binary tree in which the depth of the two subtrees of every node never differs by more than one.

Example 1:

Input: nums = [-10,-3,0,</summary>
    
    
    
    <category term="Leetcode" scheme="https://www.mahfuz.info/categories/Leetcode/"/>
    
    
    <category term="algorithm" scheme="https://www.mahfuz.info/tags/algorithm/"/>
    
    <category term="java" scheme="https://www.mahfuz.info/tags/java/"/>
    
    <category term="binary-search-tree" scheme="https://www.mahfuz.info/tags/binary-search-tree/"/>
    
  </entry>
  
  <entry>
    <title>Fibonacci Number</title>
    <link href="https://www.mahfuz.info/2021/05/23/fibonacci-number/"/>
    <id>https://www.mahfuz.info/2021/05/23/fibonacci-number/</id>
    <published>2021-05-23T03:58:19.000Z</published>
    <updated>2023-10-15T16:20:59.358Z</updated>
    
    
    <summary type="html">The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,

F(0) = 0, F(1) = 1 F(n) = F(n - 1) + F(n - 2), for n &gt; 1.


Given n, calculate F(n).

Example 1:
Input: n = 2 Outp</summary>
    
    
    
    <category term="Leetcode" scheme="https://www.mahfuz.info/categories/Leetcode/"/>
    
    
    <category term="algorithm" scheme="https://www.mahfuz.info/tags/algorithm/"/>
    
    <category term="java" scheme="https://www.mahfuz.info/tags/java/"/>
    
    <category term="fibonacci" scheme="https://www.mahfuz.info/tags/fibonacci/"/>
    
  </entry>
  
  <entry>
    <title>Climbing Stairs</title>
    <link href="https://www.mahfuz.info/2021/05/23/climbing-stairs/"/>
    <id>https://www.mahfuz.info/2021/05/23/climbing-stairs/</id>
    <published>2021-05-23T03:48:13.000Z</published>
    <updated>2023-10-15T16:20:59.358Z</updated>
    
    
    <summary type="html">Problem
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps

Example 2:

Input: n = 3
Output: 3
Explanation: There are three ways to cli</summary>
    
    
    
    <category term="Leetcode" scheme="https://www.mahfuz.info/categories/Leetcode/"/>
    
    
    <category term="algorithm" scheme="https://www.mahfuz.info/tags/algorithm/"/>
    
    <category term="java" scheme="https://www.mahfuz.info/tags/java/"/>
    
    <category term="fibonacci" scheme="https://www.mahfuz.info/tags/fibonacci/"/>
    
  </entry>
  
  <entry>
    <title>Log everyday in google spreadsheet</title>
    <link href="https://www.mahfuz.info/2021/03/24/log-everyday-in-google-spreadsheet/"/>
    <id>https://www.mahfuz.info/2021/03/24/log-everyday-in-google-spreadsheet/</id>
    <published>2021-03-24T03:16:13.000Z</published>
    <updated>2023-10-15T18:22:45.586Z</updated>
    
    
    <summary type="html">I just wanted to create a daily task list with notes and reminders in google spreadsheet. So, I created a template which will look like this.

Now, I need to create a new sheet everyday where the sheet name will denote the day and after each month I needed it to back up in my google drive.

To solve</summary>
    
    
    
    
    <category term="app script" scheme="https://www.mahfuz.info/tags/app-script/"/>
    
    <category term="spreadsheet" scheme="https://www.mahfuz.info/tags/spreadsheet/"/>
    
  </entry>
  
  <entry>
    <title>Kafka server setup</title>
    <link href="https://www.mahfuz.info/2021/03/08/kafka-server-setup/"/>
    <id>https://www.mahfuz.info/2021/03/08/kafka-server-setup/</id>
    <published>2021-03-08T12:24:34.000Z</published>
    <updated>2023-10-15T16:20:59.359Z</updated>
    
    
    <summary type="html">Script to start a kafka server

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83


#!/bin/sh

setProperty(){
</summary>
    
    
    
    
    <category term="kafka" scheme="https://www.mahfuz.info/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>How to implement cache in Java</title>
    <link href="https://www.mahfuz.info/2020/08/25/how-to-implement-cache-in-java/"/>
    <id>https://www.mahfuz.info/2020/08/25/how-to-implement-cache-in-java/</id>
    <published>2020-08-25T10:45:43.000Z</published>
    <updated>2023-10-15T18:22:32.954Z</updated>
    
    
    <summary type="html">According to wikipedia, a cache is a hardware or software component that stores data so that future requests for that data can be served faster.

Benefits:
 * Faster access of data in O(1)
 * Computation complexity once for the first time

Types:
 * Memory cache
 * Database cache
 * Disk cache, etc
</summary>
    
    
    
    <category term="Java" scheme="https://www.mahfuz.info/categories/Java/"/>
    
    
    <category term="java" scheme="https://www.mahfuz.info/tags/java/"/>
    
    <category term="cache" scheme="https://www.mahfuz.info/tags/cache/"/>
    
  </entry>
  
  <entry>
    <title>Find pair of numbers in an array with a given sum</title>
    <link href="https://www.mahfuz.info/2020/08/21/find-pair-of-numbers-in-an-array-with-a-given-sum/"/>
    <id>https://www.mahfuz.info/2020/08/21/find-pair-of-numbers-in-an-array-with-a-given-sum/</id>
    <published>2020-08-21T11:16:21.000Z</published>
    <updated>2023-10-15T16:20:59.359Z</updated>
    
    
    <summary type="html">There are multiple ways to find the pair of numbers in a given array. The numbers in the array can be in two ways.

 1. Sorted
 2. Unsorted

If the numbers are sorted then we can get easily with the complexity of O(n). The brute force approach will be easily applicable for both the sorted and unsort</summary>
    
    
    
    <category term="Leetcode" scheme="https://www.mahfuz.info/categories/Leetcode/"/>
    
    
    <category term="java" scheme="https://www.mahfuz.info/tags/java/"/>
    
    <category term="array" scheme="https://www.mahfuz.info/tags/array/"/>
    
    <category term="number theory" scheme="https://www.mahfuz.info/tags/number-theory/"/>
    
  </entry>
  
  <entry>
    <title>HashMap Implementation for Java</title>
    <link href="https://www.mahfuz.info/2020/08/18/hashmap-implementation-for-java/"/>
    <id>https://www.mahfuz.info/2020/08/18/hashmap-implementation-for-java/</id>
    <published>2020-08-18T11:18:27.000Z</published>
    <updated>2023-10-15T18:21:46.161Z</updated>
    
    
    <summary type="html">HashMap is a dictionary data structure provided by java. It’s a Map-based collection class that is used to store data in Key &amp; Value pairs. In this article, we’ll be creating our own hashmap implementation.

The benefit of using this data structure is faster data retrieval. It has data access comple</summary>
    
    
    
    <category term="Java" scheme="https://www.mahfuz.info/categories/Java/"/>
    
    
    <category term="java" scheme="https://www.mahfuz.info/tags/java/"/>
    
    <category term="hashmap" scheme="https://www.mahfuz.info/tags/hashmap/"/>
    
  </entry>
  
  <entry>
    <title>Product of Array Except Self</title>
    <link href="https://www.mahfuz.info/2020/08/16/product-of-array-except-self/"/>
    <id>https://www.mahfuz.info/2020/08/16/product-of-array-except-self/</id>
    <published>2020-08-16T11:23:19.000Z</published>
    <updated>2023-10-15T16:20:59.360Z</updated>
    
    
    <summary type="html">Given an array nums of n integers where n &gt; 1, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Example:

Input:[1,2,3,4]
Output:[24,12,8,6]

Problem link: Product of Array Except Self

Solution:

Let’s start with a brute-force solution.</summary>
    
    
    
    <category term="Leetcode" scheme="https://www.mahfuz.info/categories/Leetcode/"/>
    
    
    <category term="java" scheme="https://www.mahfuz.info/tags/java/"/>
    
    <category term="array" scheme="https://www.mahfuz.info/tags/array/"/>
    
  </entry>
  
</feed>
